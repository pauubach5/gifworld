{"ast":null,"code":"import _slicedToArray from\"/home/pauubach/Projects/react-basico-midudev/gifworld/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import getTrendingTerms from\"../services/getTrendingSearchTerms\";import{useState,useEffect}from\"react\";import Category from\"./Category\";//Working with Intersection Observer, it allows us to charge the Trending section ONLY WHEN its visible to the viewport.\nimport{jsx as _jsx}from\"react/jsx-runtime\";function TrendingSearches(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),trends=_useState2[0],setTrends=_useState2[1];useEffect(function(){getTrendingTerms().then(setTrends);},[]);return/*#__PURE__*/_jsx(Category,{name:\"Trending\",options:trends});}export default function LazyTrending(){var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];useEffect(function(){var onChange=function onChange(entries){//Entries es un array\nvar el=entries[0];if(el.isIntersecting){setShow(true);}};var observer=new IntersectionObserver(onChange,{rootMargin:'100px'});observer.observe(document.getElementById('LazyTrending'));});return/*#__PURE__*/_jsx(\"div\",{id:\"LazyTrending\",children:show?/*#__PURE__*/_jsx(TrendingSearches,{}):null});}","map":{"version":3,"names":["getTrendingTerms","useState","useEffect","Category","jsx","_jsx","TrendingSearches","_useState","_useState2","_slicedToArray","trends","setTrends","then","name","options","LazyTrending","_useState3","_useState4","show","setShow","onChange","entries","el","isIntersecting","observer","IntersectionObserver","rootMargin","observe","document","getElementById","id","children"],"sources":["/home/pauubach/Projects/react-basico-midudev/gifworld/src/components/TrendingSearches.js"],"sourcesContent":["import getTrendingTerms from \"../services/getTrendingSearchTerms\"\nimport { useState, useEffect } from \"react\"\nimport Category from \"./Category\"\n//Working with Intersection Observer, it allows us to charge the Trending section ONLY WHEN its visible to the viewport.\nfunction TrendingSearches() {\n    const [trends, setTrends] = useState([])\n    \n    useEffect(function () {\n        getTrendingTerms().then(setTrends)\n    }, [])\n\n    return <Category name='Trending' options={trends} />\n}\n\nexport default function LazyTrending() {\n    const [show, setShow] = useState(false)\n\n    useEffect(function () {\n        const onChange = (entries) => {\n            //Entries es un array\n            const el = entries[0]\n            if (el.isIntersecting) {\n                setShow(true)\n            }\n        }\n        const observer = new IntersectionObserver(onChange, {\n            rootMargin: '100px'\n        })\n\n        observer.observe(document.getElementById('LazyTrending'))\n    })\n\n    return <div id='LazyTrending'>\n        {show ? <TrendingSearches /> : null }\n    </div>\n}"],"mappings":"2IAAA,MAAO,CAAAA,gBAAgB,KAAM,oCAAoC,CACjE,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CACxB,IAAAC,SAAA,CAA4BN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IAExBN,SAAS,CAAC,UAAY,CAClBF,gBAAgB,EAAE,CAACY,IAAI,CAACD,SAAS,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBAAON,IAAA,CAACF,QAAQ,EAACU,IAAI,CAAC,UAAU,CAACC,OAAO,CAAEJ,MAAO,EAAG,CACxD,CAEA,cAAe,SAAS,CAAAK,YAAYA,CAAA,CAAG,CACnC,IAAAC,UAAA,CAAwBf,QAAQ,CAAC,KAAK,CAAC,CAAAgB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAhCE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IAEpBf,SAAS,CAAC,UAAY,CAClB,GAAM,CAAAkB,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,OAAO,CAAK,CAC1B;AACA,GAAM,CAAAC,EAAE,CAAGD,OAAO,CAAC,CAAC,CAAC,CACrB,GAAIC,EAAE,CAACC,cAAc,CAAE,CACnBJ,OAAO,CAAC,IAAI,CAAC,CACjB,CACJ,CAAC,CACD,GAAM,CAAAK,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CAACL,QAAQ,CAAE,CAChDM,UAAU,CAAE,OAChB,CAAC,CAAC,CAEFF,QAAQ,CAACG,OAAO,CAACC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAAC,CAC7D,CAAC,CAAC,CAEF,mBAAOxB,IAAA,QAAKyB,EAAE,CAAC,cAAc,CAAAC,QAAA,CACxBb,IAAI,cAAGb,IAAA,CAACC,gBAAgB,IAAG,CAAG,IAAI,EACjC,CACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}