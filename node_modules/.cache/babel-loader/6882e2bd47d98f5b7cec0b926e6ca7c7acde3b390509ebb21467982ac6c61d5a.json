{"ast":null,"code":"var _jsxFileName = \"/home/pauubach/Projects/react-basico-midudev/gifworld/src/components/TrendingSearches.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport getTrendingTerms from \"../services/getTrendingSearchTerms\";\nimport { useState, useEffect } from \"react\";\nimport Category from \"./Category\";\n//Working with Intersection Observer, it allows us to charge the Trending section ONLY WHEN its visible to the viewport.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrendingSearches() {\n  _s();\n  const [trends, setTrends] = useState([]);\n  useEffect(function () {\n    getTrendingTerms().then(setTrends);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Category, {\n    name: \"Trending\",\n    options: trends\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 12\n  }, this);\n}\n_s(TrendingSearches, \"kLUnhehmoevJwfCWQUk2udGvkuc=\");\n_c = TrendingSearches;\nexport default function LazyTrending() {\n  _s2();\n  const [show, setShow] = useState(false);\n  useEffect(function () {\n    const observer = new IntersectionObserver(onChange, {\n      rootMargin: '100px'\n    });\n  });\n}\n_s2(LazyTrending, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n_c2 = LazyTrending;\nvar _c, _c2;\n$RefreshReg$(_c, \"TrendingSearches\");\n$RefreshReg$(_c2, \"LazyTrending\");","map":{"version":3,"names":["getTrendingTerms","useState","useEffect","Category","jsxDEV","_jsxDEV","TrendingSearches","_s","trends","setTrends","then","name","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","LazyTrending","_s2","show","setShow","observer","IntersectionObserver","onChange","rootMargin","_c2","$RefreshReg$"],"sources":["/home/pauubach/Projects/react-basico-midudev/gifworld/src/components/TrendingSearches.js"],"sourcesContent":["import getTrendingTerms from \"../services/getTrendingSearchTerms\"\nimport { useState, useEffect } from \"react\"\nimport Category from \"./Category\"\n//Working with Intersection Observer, it allows us to charge the Trending section ONLY WHEN its visible to the viewport.\nfunction TrendingSearches() {\n    const [trends, setTrends] = useState([])\n    \n    useEffect(function () {\n        getTrendingTerms().then(setTrends)\n    }, [])\n\n    return <Category name='Trending' options={trends} />\n}\n\nexport default function LazyTrending() {\n    const [show, setShow] = useState(false)\n\n    useEffect(function () {\n        const observer = new IntersectionObserver(onChange, {\n            rootMargin: '100px'\n            \n        })\n    })\n}"],"mappings":";;;AAAA,OAAOA,gBAAgB,MAAM,oCAAoC;AACjE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,YAAY;IAClBF,gBAAgB,EAAE,CAACU,IAAI,CAACD,SAAS,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOJ,OAAA,CAACF,QAAQ;IAACQ,IAAI,EAAC,UAAU;IAACC,OAAO,EAAEJ;EAAO;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACxD;AAACT,EAAA,CARQD,gBAAgB;AAAAW,EAAA,GAAhBX,gBAAgB;AAUzB,eAAe,SAASY,YAAYA,CAAA,EAAG;EAAAC,GAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,YAAY;IAClB,MAAMoB,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,QAAQ,EAAE;MAChDC,UAAU,EAAE;IAEhB,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AAACN,GAAA,CATuBD,YAAY;AAAAQ,GAAA,GAAZR,YAAY;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}